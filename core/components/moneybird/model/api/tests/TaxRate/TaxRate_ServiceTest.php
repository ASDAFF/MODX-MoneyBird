<?php

namespace Moneybird;

require_once dirname(__FILE__) . '/../../ApiConnector.php';

/**
 * Test class for TaxRate_Service.
 * Generated by PHPUnit on 2012-04-22 at 14:43:05.
 */
class TaxRate_ServiceTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var TaxRate_Service
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		if (file_exists('../config.php')) {
			include ('../config.php');
		} else {
			include ('config.php');
		}
		
		$transport = getTransport($config);	
		$mapper = new XmlMapper();
		$connector = new ApiConnector($config['clientname'], $transport, $mapper);
		$this->object = $connector->getService('TaxRate');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers Moneybird\TaxRate_Service::getAll
	 */
	public function testGetAll() {
		$tests = array(
			'all' => 4,
			'inactive' => 1,
			'sales' => 3,
			'purchase' => 1,
		);
		foreach ($tests as $filter => $count) {
			$taxrates = $this->object->getAll($filter);
			$this->assertInstanceOf('Moneybird\TaxRate_Array', $taxrates, $filter);
			$this->assertEquals($count, count($taxrates));
		}
	}

}

?>
